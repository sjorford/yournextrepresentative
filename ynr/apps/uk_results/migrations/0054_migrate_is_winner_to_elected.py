# Generated by Django 2.2.18 on 2021-05-13 15:33

from django.db import migrations


def forwards(apps, schema_editor):
    """
    Ensures that for every candidate result we have we store the definitive True
    or False value for if they were elected against the related candidacy before
    we throw this data away in next migration to remove the field
    """
    CandidateResult = apps.get_model("uk_results", "CandidateResult")
    # exclude any where we already marked them as elected as are not interested
    # in them, we only want to turn None values in to False
    for result in CandidateResult.objects.exclude(membership__elected=True):
        membership = result.membership
        membership.elected = result.is_winner
        membership.save()


def backwards(apps, schema_editor):
    """
    Applies the reverse of the above - takes the elected value, and stores it
    against the result object
    """
    CandidateResult = apps.get_model("uk_results", "CandidateResult")
    for result in CandidateResult.objects.all():
        result.is_winner = bool(result.membership.elected)
        result.save()


class Migration(migrations.Migration):

    dependencies = [("uk_results", "0053_update_is_winner_to_elected")]

    operations = [migrations.RunPython(code=forwards, reverse_code=backwards)]
